name: Dev - Terraform Apply
on:
  push:
    branches:
      - "main"
    paths:
      - "dev/**"

  workflow_dispatch:
    inputs:
      pr_number:
        description: The Pull Request number
        required: true
        type: number

permissions:
  id-token: write # This is required for requesting the JWT (OIDC)
  contents: read
  pull-requests: write

jobs:
  dev_terraform_apply:
    environment:
      name: Development
    env:
      tf_dir: "dev"
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}

    runs-on: ubuntu-22.04
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4

      - id: extract_pr_info
        name: Extract PR Info
        uses: Innovate-Future-Foundation/common-action/extract-pr-info@main
        with:
          github_token: ${{ github.token }}
          pr_number: ${{ inputs.pr_number }}

      - id: tf_prep
        name: Terraform setup using Access Key
        uses: ./actions/setup_with_key
        with:
          terraform_dir: ${{ env.tf_dir }}
          terraform_version: ${{ vars.TF_VERSION }}
          aws_region: ${{ secrets.TF_BACKEND_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_tfstate_bucket: ${{ secrets.TF_BACKEND_STATE_BUCKET }}
          aws_tfstate_key: ${{ secrets.TF_DEFAULT_STATE_KEY }}
          aws_tflock_table: ${{ secrets.TF_BACKEND_LOCKID_TABLE }}
      
      - id: tf_apply_plan
        name: Terraform apply plan file from s3
        if: steps.extract_pr_info.outputs.PR_NUMBER != 0
        uses: Innovate-Future-Foundation/common-action/apply-tfplan-s3@main
        with:
          tf_dir: ${{ env.tf_dir }}
          s3_bucket: ${{ secrets.WORKFLOW_TEMP_BUCKET }}
          obj_key: "plans/plan-${{ steps.extract_pr_info.outputs.PR_NUMBER }}_${{ env.tf_dir }}"
  
      - id: tf_hot_apply
        if: steps.extract_pr_info.outputs.PR_NUMBER == 0
        name: Terraform Fast Apply For Hotfix
        run: terraform apply -auto-approve
        env:
          # Non-blank value will overwrite the terraform fetched thumbprint
          TF_VAR_oidc_provider_thumbprint: ""
          TF_VAR_location: ${{ secrets.AWS_REGION }}
          TF_VAR_dev_bootstrap_role: ${{ secrets.AWS_DEV_BOOTSTRAP_ROLE }}
          TF_VAR_central_ecr_region: ${{ secrets.CENTRAL_ECR_REGION }}
          TF_VAR_central_ecr_repo: ${{ secrets.CENTRAL_ECR_REPO }}
          TF_VAR_prod_account_id: ${{ secrets.AWS_PROD_ACCOUNT }}
