name: Dev - Terraform Apply
on:
  push:
    branches:
      - "main"
    paths:
      - "dev/**"

  workflow_dispatch:
    inputs:
      pr_number:
        description: The Pull Request number
        required: true
        type: number

permissions:
  id-token: write # This is required for requesting the JWT (OIDC)
  contents: read
  pull-requests: write

jobs:
  dev_terraform_apply:
    environment:
      name: Development
    env:
      tf_version: "1.10.2"
      tf_dir: "dev"
    
    runs-on: ubuntu-22.04
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4
      - id: tf_prep
        name: Terraform setup using Access Key
        uses: ./actions/setup_with_key
        env:
          aws_tfstate_key: "state/terraform-state"
        with:
          terraform_dir: ${{ env.tf_dir }}
          terraform_version: ${{ env.tf_version }}
          aws_region: ${{ secrets.TF_BACKEND_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_tfstate_bucket: ${{ secrets.TF_BACKEND_STATE_BUCKET }}
          aws_tfstate_key: ${{ env.aws_tfstate_key }}
          aws_tflock_table: ${{ secrets.TF_BACKEND_LOCKID_TABLE }}

      - id: get_pr_number
        name: Get PR number
        if: github.event_name == 'push'
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "Getting PR number based on head_commit"
            PR_NUMBER=$(gh pr list --base main --state merged --search "${{ github.event.head_commit.message }}" --json number --jq '.[0].number')
          else
            echo "Getting PR number from dispatch input"
            PR_NUMBER=${{ github.event.inputs.pr_number }}
          fi
          if [ -z "$PR_NUMBER" ]; then
            echo "No matching PR found"
            exit 1
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: dl_tf_plan
        name: Download Plan from S3
        run: |
          aws s3 cp s3://${{ secrets.WORKFLOW_TEMP_BUCKET }}/plans/plan-${{ steps.get_pr_number.outputs.PR_NUMBER }}_${{ env.tf_dir }} tfplan
          if [ $? -ne 0 ]; then
            echo "Failed to retrieve planfile. It may have expired or been deleted."
            exit 1
          fi

      - id: tf_apply
        name: Terraform Apply
        run: terraform apply -auto-approve tfplan
