name: Terraform Plan
on:
  pull_request:

permissions:
  id-token: write # This is required for requesting the JWT (OIDC)
  contents: read
  pull-requests: write

jobs:
  terraform_plan:
    runs-on: ubuntu-22.04
    # Specify trigger condition
    if: github.event.pull_request.state != 'approved'
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4
      - id: merge_into_pr
        name: Merge main into PR branch
        uses: ./actions/merge
        with:
          target: "main"

      - id: tf_prep
        name: Terraform setup using Access Key
        uses: ./actions/setup_with_key
        env:
          terraform_version: "1.1.7"
          terraform_dir: "./"
          aws_tfstate_key: "state/terraform-state"
        with:
          terraform_dir: ${{ env.terraform_dir }}
          terraform_version: ${{ env.terraform_version }}
          aws_region: ${{ secrets.AWS_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_tfstate_bucket: ${{ secrets.S3_STATE_FILE_BUCKET }}
          aws_tfstate_key: ${{ env.aws_tfstate_key }}
          aws_tflock_table: ${{ secrets.DYNAMODB_STATE_LOCK_TABLE }}

      - id: tf_plan
        name: Terraform Plan
        run: terraform plan -out .planfile
        env:
          # Non-blank value will overwrite the terraform fetched thumbprint
          TF_VAR_oidc_provider_thumbprint: ""

      - id: post_comment
        name: Post Terraform Plan to PR
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          planfile: .planfile
      
      - name: Upload Plan to S3
        run: |
          aws s3 cp .planfile s3://${{ secrets.S3_REPO_ARTIFACT_BUCKET }}/plans/plan-pr_${{ github.event.pull_request.number }}
          echo "Plan uploaded to S3"